Ich habe mich Hauptsächlich an die Struktur von JSON Dictionarys in Verbindung mit Arrays gehalten.

GET http://localhost:3000/items/all

Items: [
	{name: "ITEMNAME:STRING",
	Anzahl: ITEMANZAHL:NUMBER, 
	Fach: "FACHBENENNUNG:STRING", 
	Tags:[
			{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
			{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
	ID: xxx},
	{name: "ITEMNAME2:STRING",
	Anzahl: ITEMANZAHL2:NUMBER, 
	Fach: "FACHBENENNUNG2:STRING", 
	Tags:[
			{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
			{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
	ID: xxx},
	
	
	
GET http://localhost:3000/items/findByName/item2		
Item: {name: "ITEMNAME:STRING",
		Anzahl: ITEMANZAHL:NUMBER, 
		Fach: "FACHBENENNUNG:STRING", 
		Tags:[
				{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
				{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
	ID: xxx}
	
	
GET http://localhost:3000/items/findByID/1354
Item: {name: "ITEMNAME:STRING",
		Anzahl: ITEMANZAHL:NUMBER, 
		Fach: "FACHBENENNUNG:STRING", 
		Tags:[
				{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
				{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
	ID: xxx}
	
GET http://localhost:3000/items/getAllTags
Tags: [{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},
		{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'},
		{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'},
		{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'},
		{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'},
		{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
		
		
		

// Nun findet das Filtern statt.
//Hier kannst du schauen was leichter ist, ob wir es in ein Array packen wo nur der Name übergeben wird, oder ob wir es
// in ein Dictionary im Array packen, was aber nicht nötig ist, da nur der Name wichtig ist.

POST http://localhost:3000/items/getItemsByTags (Nachfolgend meine JSON welche durch POST mitgegeben wird)
Tags: ['TAGNAME1:STRING',
		'TAGNAME2:STRING',
		'TAGNAME2:STRING',
		'TAGNAME2:STRING',
		'TAGNAME2:STRING',
		'TAGNAME2:STRING',
		'TAGNAME2:STRING',
		]
		

Als Antwort dann ähnlich wie bei allItems, jedoch nur die Items die SÄMTLICHE Tags aus der Anfrage enthalten.
Also muss die von mir angesprochene Filterung stattfinden.
Einfach nur prüfen, dass die Menge der von mir angegeben String Teil der Menge der Tags jedes Items von euch sind.
Items: [
	{name: "ITEMNAME:STRING",
	Anzahl: ITEMANZAHL:NUMBER, 
	Fach: "FACHBENENNUNG:STRING", 
	Tags:[
			{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
			{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
	ID: xxx},
	{name: "ITEMNAME2:STRING",
	Anzahl: ITEMANZAHL2:NUMBER, 
	Fach: "FACHBENENNUNG2:STRING", 
	Tags:[
			{tagname: 'TAGNAME1:STRING', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
			{tagname: 'TAGNAME2:STRING', tagColour: '0xfffff:STRING'}
		]
	ID: xxx},


Beispiel:
	Anfrage:
	Tags: ['Schraube','Schwarz']


	Antwort:
	Items: [{name: "Schwarze M13 Schraube",
			Anzahl: 25, 
			Fach: "25f1252", 
			Tags:[
					{tagname: 'Schwarz', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
					{tagname: 'Schraube', tagColour: '0xfffff:STRING'}
					{tagname: 'M13', tagColour: '0xfffff:STRING'}
				]
			ID: 13549},
			{name: "Schwarze M4 Schraube",
			Anzahl: 13, 
			Fach: "25f1252", 
			Tags:[
					{tagname: 'Schwarz', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
					{tagname: 'Schraube', tagColour: '0xfffff:STRING'}
					{tagname: 'M4', tagColour: '0xfffff:STRING'}
				]
			ID: 16548},





<-- Hier geht es um die richtige Suche bzw aktivieren von Embedded.    
GET http://localhost:3000/items/findByID/1354
Item: {	name: "Schwarze M13 Schraube",
		Anzahl: 25, 
		Fach: "25f1252", 
		Tags:[
				{tagname: 'Schwarz', tagColour: '0x00000:STRING'},			<--- HexadezimalString -->
				{tagname: 'Schraube', tagColour: '0xfffff:STRING'}
				{tagname: 'M13', tagColour: '0xfffff:STRING'}
			]
		ID: 13549
		Farbe: "FARBE:HEXADEZIMAL" 		<--- Farbe wie es aufleuchtet
		}
<-- Früher oder später kann man hier noch mehr Infos mitliefern.
		

POST http://localhost:3000/Tags/create    <-- Hier können wir überlegen ob wir statt Tag, eine Tag Route verwenden oder Item Route ebenfalls für die Tags verwenden
Content-Type: application/json
sessionid: 1111

{
    name: "Tag1"	
}

<-- Farbe muss von euch random generiert werden


POST http://localhost:3000/items/create
Content-Type: application/json
sessionid: 1111

{
	name: "Schwarze M13 Schraube",
	Anzahl: 25, 
	Fach: "25f1252", 
	Tags:[
			{tagname: 'Schwarz'},			
			{tagname: 'Schraube'},	<--- Ohne FARBE! -->
			{tagname: 'M13'}
		]
	ID: 13549},
}


<-- Updaten der Eigenschaften (z.B Anzahl ändern)   //Man könnte zwar auch eine Route einführen wo nur die Anzahl geändert wird, aber das können wir dann nochmal schauen was sinnvoll ist.
POST http://localhost:3000/items/update
{
	name: "Schwarze M13 Schraube",
	Anzahl: 25, 
	Fach: "25f1252", 
	Tags:[
			{tagname: 'Schwarz'},			
			{tagname: 'Schraube'},	<--- Ohne FARBE! -->
			{tagname: 'M13'}
		]
	ID: 13549},
}



